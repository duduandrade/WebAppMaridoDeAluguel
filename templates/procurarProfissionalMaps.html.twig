<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <title>{% block title %}Marido de Aluguel{% endblock %}</title>
        {#<link href="{{ asset('css/materialize.css') }}" rel="stylesheet" />#}
        <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
        <!--Import materialize.css-->
        <link type="text/css" rel="stylesheet" href="css/materialize.css" media="screen,projection"/>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
        <style>
            .checked {
                color: orange;
            }

            /* Always set the map height explicitly to define the size of the div
             * element that contains the map. */
            #map {
                height: 100%;
            }
            /* Optional: Makes the sample page fill the window. */
            html, body {
                height: 100%;
                margin: 0;
                padding: 0;
            }
            .controls {
                margin-top: 10px;
                border: 1px solid transparent;
                border-radius: 2px 0 0 2px;
                box-sizing: border-box;
                -moz-box-sizing: border-box;
                height: 32px;
                outline: none;
                box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
            }

            #pac-input {
                background-color: #fff;
                font-family: Roboto;
                font-size: 15px;
                font-weight: 300;
                margin-left: 12px;
                padding: 0 11px 0 13px;
                text-overflow: ellipsis;
                width: 300px;
            }

            #pac-input:focus {
                border-color: #4d90fe;
            }

            .pac-container {
                font-family: Roboto;
            }

            #type-selector {
                color: #fff;
                background-color: #4d90fe;
                padding: 5px 11px 0px 11px;
            }

            #type-selector label {
                font-family: Roboto;
                font-size: 13px;
                font-weight: 300;
            }
            .divProfissionalBox { 
                position: absolute;
                z-index: 99; 
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
            }
            .divProfissionalBox, #divTitulo, #divConteudoProfissional, #divBotoes{
                width: 300px;
            }
        </style>

        <!--Let browser know website is optimized for mobile-->
        <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    </head>
    <body>



        <div id="navbar">
            {% block navbar %}
                <nav>
                    <div class="nav-wrapper blue">
                        <a href="#!" class="brand-logo">Procurar Profissional</a>
                        <a href="#" data-target="mobile-demo" class="sidenav-trigger"><i class="material-icons">menu</i></a>
                        <ul class="right hide-on-med-and-down">
                            <li><a href="sass.html">Home</a></li>
                            <li><a href="badges.html">Perfil</a></li>
                            <li><a href="collapsible.html">Sair</a></li>

                        </ul>
                    </div>
                </nav>

            {% endblock %}
        </div>

        <input id="pac-input" class="controls" type="text"
               placeholder="Informe o local do antendimento">

        <div id="map"></div>
        {{dump(estrelas)}}
        {{dump(profissionais)}}
        {{dump(endereco)}}
        {% for profissionalArray in endereco %}

            <div  id="divProfissional{{profissionalArray[5].idprofissionais}}" class="divProfissionalBox valign-wrapper " style="display: none;">
                <div class="row white" >
                    <div class="col s12 m12 l12 blue white-text" id="divTitulo">
                        <p>Perfil profissional <i class="material-icons" onClick="fechar('divProfissional{{profissionalArray[5].idprofissionais}}');">close</i> </p>


                    </div>
                    <div class="row" id="divConteudo">
                        <div class="row">
                            <div class="col s6 m6 l6">
                                <br>
                                <img {%if profissionalArray[5].usuariosusuarios.foto is not null %} src="img/prof/{{profissionalArray[5].usuariosusuarios.foto}}" {%else%}src="img/avatar.png" {%endif%}  class="responsive-img circle">
                            </div>
                            <div class="col s6 m6 l6">
                                <h5 id="nome">{{profissionalArray[5].usuariosusuarios.nome}}</h5>
                                {{estrelas[profissionalArray[5].idprofissionais]|number_format(1, '.', ',')}}
                                {%if estrelas[profissionalArray[5].idprofissionais]|round(0,'floor') ==0%}
                                    {% for i in 1..5%}
                                        <span class="fa fa-star"></span>
                                    {%endfor%}
                                {%else%}
                                    {% for i in 1..estrelas[profissionalArray[5].idprofissionais]|round(0,'floor')%}

                                        <span class="fa fa-star checked"></span>
                                    {%endfor%}
                                    {%if estrelas[profissionalArray[5].idprofissionais]|round(0,'floor')<5%}
                                        {% for k in estrelas[profissionalArray[5].idprofissionais]|round(0,'floor')..4%}

                                            <span class="fa fa-star"></span>
                                        {%endfor%}
                                    {%endif%}
                                {%endif%}
                                <p>{{profissionalArray[4]}} </p>
                            </div>
                            <div class="row">
                                <br>                          
                                <a class="waves-effect waves-light btn-small blue"  onClick="fechar('divProfissional{{profissionalArray[5].idprofissionais}}');">Procurar outro</a>
                                <a class="waves-effect waves-light btn-small orange" onClick="criarSolicitacao('{{profissionalArray[5].idprofissionais}}');">    <i class="material-icons right">send</i>Solicitar</a>
                            </div>

                            <div class="progress" id="loading{{profissionalArray[5].idprofissionais}}" style="display: none">
                                <div class="indeterminate"></div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        {%endfor%}

        <!-- Scripts -->
        <script type="text/javascript" src="js/jquery-3.3.1.min.js"></script>
        <script type="text/javascript" src="js/materialize.js"></script>
        <script type="text/javascript" src="js/menuLateral.js"></script>

        <script type="text/javascript">
            function initMap() {
                var coordenadasCharqueadas = [
                    {lat: -29.9591749, lng: -51.6287654},
                ];
                var map = new google.maps.Map(document.getElementById('map'), {
                    zoom: 17,
                    center: coordenadasCharqueadas[0],
                    mapTypeId: google.maps.MapTypeId.ROADMAP,
                    zoomControl: true,
                    gestureHandling: 'cooperative'
                });
                var infoWindow = new google.maps.InfoWindow({map: map});

                function solicitarPermissaoLocalizacao() {
                    navigator.permissions.query({name: 'geolocation'}).then(function (result) {
                        if (result.state == 'prompt' || result.state == 'denied') {
                            //solicita autorização ao usuário caso ainda não tenha aceitado
                            
                            navigator.geolocation.getCurrentPosition(revealPosition, positionDenied, geoSettings);
                        }
                    });
                }

                solicitarPermissaoLocalizacao();
                if (navigator.geolocation) {
                    //se a permissao foi aceita centraliza o mapa em sua posição
                    navigator.geolocation.getCurrentPosition(function (position) {
                        var pos = {
                            lat: position.coords.latitude,
                            lng: position.coords.longitude
                        };
                        map.setCenter(pos);
                    }, function () {
                        handleLocationError(true, infoWindow, map.getCenter());
                    });
                } else {
                    handleLocationError(false, infoWindow, map.getCenter());
                }
                function inserirMarcadoresProfissionais(map) {
                    var locations
                    = {{endereco|json_encode|raw }}; //localizacoes recebidas do controller
                            for (var i = 0; i < locations.length; i++) {
                        adicionarMarcadoresMapa(locations, map, i);
                    }
                }
                function adicionarMarcadoresMapa(locations, map, i) {
                    var localizacao = new google.maps.LatLng(locations[i][1], locations[i][2]);
                    var marker = new google.maps.Marker({
                        position: localizacao,
                        map: map
                    });
                    var icon = {
                        url: 'img/' + locations[i][0] + '.png', //marcador casa ou relogio de acordo com o controller
                        scaledSize: new google.maps.Size(40, 40)
                    };
                    marker.setIcon(icon);
                    addEventoMarcadoresProfissionais(marker, locations[i][3]);
                    bounds.extend(localizacao);
                }
                function addEventoMarcadoresProfissionais(marker, i) {
                    google.maps.event.addListener(marker, 'click', (function (marker, i) {
                        return function () {
                            abrirJanelaProfissional(i);
                        };
                    })(marker, i));
                }
                function abrirJanelaProfissional(i) {
                    console.log("marker id: " + i);
                    $('#divProfissional' + i).show();
                }
                function handleLocationError(browserHasGeolocation, infoWindow, pos) {
                    infoWindow.setPosition(pos);
                    infoWindow.setContent(browserHasGeolocation ?
                            'Error: The Geolocation service failed.' :
                            'Error: Seu navegador não suporta geolocalização.');
                }

                var input = (document.getElementById('pac-input'));

                var types = document.getElementById('type-selector');
                map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
                map.controls[google.maps.ControlPosition.TOP_LEFT].push(types);
                var autocomplete = new google.maps.places.Autocomplete(input);
                autocomplete.bindTo('bounds', map);

                var infowindow = new google.maps.InfoWindow();
                var marker = new google.maps.Marker({
                    map: map,
                    anchorPoint: new google.maps.Point(0, -29)
                });
                bounds = new google.maps.LatLngBounds();
                inserirMarcadoresProfissionais(map); // coloca os marcadores dos profissionais no mapa
                map.fitBounds(bounds);  //aumenta o zoom
                map.panToBounds(bounds);   //centraliza
                autocomplete.addListener('place_changed', function () {
                    infowindow.close();
                    marker.setVisible(false);
                    var place = autocomplete.getPlace();
                    if (!place.geometry) {
                        window.alert("No details available for input: '" + place.name + "'");
                        return;
                    }

                    if (place.geometry.viewport) {
                        map.fitBounds(place.geometry.viewport);
                    } else {
                        map.setCenter(place.geometry.location);
                        map.setZoom(17);  // Why 17? Because it looks good.
                    }
                    marker.setIcon(/** @type {google.maps.Icon} */({
                        url: place.icon,
                        size: new google.maps.Size(100, 100),
                        origin: new google.maps.Point(0, 0),
                        anchor: new google.maps.Point(17, 34),
                        scaledSize: new google.maps.Size(35, 35)
                    }));
                    marker.setPosition(place.geometry.location);
                    marker.setVisible(true);

                    var address = '';
                    if (place.address_components) {
                        address = [
                            (place.address_components[0] && place.address_components[0].short_name || ''),
                            (place.address_components[1] && place.address_components[1].short_name || ''),
                            (place.address_components[2] && place.address_components[2].short_name || '')
                        ].join(' ');
                    }

                    infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);
                    infowindow.open(map, marker);
                });


                setTimeout(function () {
                    google.maps.event.trigger(map, 'resize')
                }, 100);

            }


            function criarSolicitacao(codigoProfissional) {

                var enderecoServico = $("#pac-input").val();
                if (enderecoServico == "") {
                    alert("Informe o local de antedimento");
                } else {
                    $("#loading" + codigoProfissional).show();
                    var solicitacao = {
                        profissional: codigoProfissional,
                        endereco: enderecoServico
                    };

                    console.log(JSON.stringify(solicitacao));
                    $.ajax({
                        type: "POST",
                        url: "criarSolicitacao",
                        dataType: "json",
                        contentType: 'application/json',
                        data: JSON.stringify(solicitacao),
                        success: function (result) {
                            console.log("result");
                            console.log(result);
                            if (!result.erro) {
                                window.location.href = location.origin + '/maridoDeAluguel/solicitacoes';
                            }
                        },
                        error: function (xhr, ajaxOptions, thrownError) {
                            console.log(xhr.status);
                            console.log(thrownError);
                        }
                    });
                }
            }

            function fechar(div) {
                $('#' + div).hide();
            }
        </script>

        <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCJad8cPlyBoxq47_kMa7RejAGIOdIrVYc&libraries=places&callback=initMap"
        async defer></script>
    </body>
</html>
